(require 'schelog)
(module database (%userdb read-db)
	(import chicken scheme r5rs extras lolevel utils ports data-structures posix readline srfi-1 srfi-4 srfi-13 srfi-14 srfi-18 srfi-69)
	(import schelog)
(define %userdb %empty-rel)
(set! *schelog-use-occurs-check?* #t)
(define (read-db filename)
  (define (read-a-list filename)
  (call-with-input-file filename
    (lambda (k) (read k))))
  (set! %userdb %empty-rel)
  (let ((fun (lambda (ls) (eval (list '%assert '%userdb '() ls))))
        (template (cdr (read-a-list filename)))
	(check-db (lambda (ls mem)
		    (if (member (cadaar mem) ls) (begin 
						   (display "[WARNING!] Duplicated entries for user: ")
						   (display (cadaar mem))
						   (newline)
						   ls)
		      (cons (cadaar mem) ls)))))
    (display "[ADDED] ") 
    (display (reverse (foldl check-db '() template)))
    (newline)
    (map fun template)))
)
